version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: school_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-schooladmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
      POSTGRES_DB: ${POSTGRES_DB:-school_management_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-schooladmin}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - school_network
    restart: unless-stopped

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: school_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - school_network
    restart: unless-stopped

  # MinIO Object Storage (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: school_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - school_network
    restart: unless-stopped

  # MailHog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: school_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - school_network
    restart: unless-stopped

  # pgAdmin (PostgreSQL Management - Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: school_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@school.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - school_network
    restart: unless-stopped
    profiles:
      - tools

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: school_backend
    environment:
      - DATABASE_TYPE=${DATABASE_TYPE:-postgresql}
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-schooladmin}:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/${POSTGRES_DB:-school_management_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
    ports:
      - "${BACKEND_PORT:-8001}:8001"
    volumes:
      - ./backend:/app
      - backend_logs:/var/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - school_network
    restart: unless-stopped
    profiles:
      - app

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: school_frontend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - school_network
    restart: unless-stopped
    profiles:
      - app

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_logs:
    driver: local

networks:
  school_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16